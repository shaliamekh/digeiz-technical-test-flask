"""initial

Revision ID: eb0b43f8ee04
Revises:
Create Date: 2024-04-08 13:04:00.553268

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision: str = "eb0b43f8ee04"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "mall",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "wall",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("mall_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["mall_id"], ["mall.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "footfall",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("start_datetime", sa.DateTime(), nullable=False),
        sa.Column("end_datetime", sa.DateTime(), nullable=False),
        sa.Column("people_in", sa.Integer(), nullable=False),
        sa.Column("people_out", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column(
            "origin",
            sa.Enum("raw", "reconstruction", name="origintype"),
            nullable=False,
        ),
        sa.Column("wall_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(["wall_id"], ["wall.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("footfall")
    op.drop_table("wall")
    op.drop_table("mall")
    # ### end Alembic commands ###
